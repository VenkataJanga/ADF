{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "dtagdatafactory"
		},
		"ls_blob_2_blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_2_blob'"
		},
		"ls_blob_storages_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blob_storages'"
		},
		"ls_blobstorages_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blobstorages'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_2_blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connection establishing from datasets(source and sink) to the pipeline",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_2_blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blob_storages')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "connecting blob storages ",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blob_storages_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blobstorages')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blobstorages_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storages",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "sinkcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "provider_id",
						"type": "String"
					},
					{
						"name": "provider_name",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "business_unit_",
						"type": "String"
					},
					{
						"name": "case_volume",
						"type": "String"
					},
					{
						"name": "process_adherence_rate",
						"type": "String"
					},
					{
						"name": "response_time___home_dealer",
						"type": "String"
					},
					{
						"name": "month_long",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_blob_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blob_storages",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "MB_UPTIME_DEC23_data.csv",
						"container": "sourcecontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "provider_id",
						"type": "String"
					},
					{
						"name": "provider_name",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "business_unit_",
						"type": "String"
					},
					{
						"name": "case_volume",
						"type": "String"
					},
					{
						"name": "process_adherence_rate",
						"type": "String"
					},
					{
						"name": "response_time___home_dealer",
						"type": "String"
					},
					{
						"name": "month_long",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blob_storages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_copy_data_from_blob_to_blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "cp_blob_to_blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_blob_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_blob_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_blob_source')]",
				"[concat(variables('factoryId'), '/datasets/ds_blob_sink')]"
			]
		}
	]
}